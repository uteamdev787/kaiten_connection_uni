// –ê–¥–¥–æ–Ω –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å—á–µ—Ç–æ–≤ —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ –ø–æ –ò–ù–ù
console.log('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–¥–æ–Ω–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å—á–µ—Ç–æ–≤ —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏...');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
const SPACE_CONNECTIONS = {
  517319: 517325, // –°—á–µ—Ç–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ 517319 ‚Üí –î–æ–≥–æ–≤–æ—Ä–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ 517325
  517314: 532009, // –°—á–µ—Ç–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ 517314 ‚Üí –î–æ–≥–æ–≤–æ—Ä–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ 532009  
  517324: 532011  // –°—á–µ—Ç–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ 517324 ‚Üí –î–æ–≥–æ–≤–æ—Ä–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ 532011
};

// ID –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è —Å –ò–ù–ù
const INN_FIELD_ID = 415447;

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –ø–æ –ò–ù–ù —á–µ—Ä–µ–∑ API
async function findContractsByINN(api, currentCard, innValue) {
  console.log('üîç –ü–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –ø–æ –ò–ù–ù:', innValue);

  const currentSpaceId = currentCard.space?.id || currentCard.space_id;
  const contractsSpaceId = SPACE_CONNECTIONS[currentSpaceId];
  
  if (!contractsSpaceId) {
    console.log('‚ùå –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤');
    return { error: `–î–ª—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ ${currentSpaceId} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤` };
  }

  console.log(`üìã –ò—â–µ–º –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: ${contractsSpaceId}`);

  try {
    // –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ —Å —Ç–∞–∫–∏–º –∂–µ –ò–ù–ù
    const contracts = await api.cards.find({
      space_id: contractsSpaceId,
      custom_fields: [{
        field_id: INN_FIELD_ID,
        value: innValue
      }]
    });

    // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const validContracts = contracts.filter(card => card.id !== currentCard.id);
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: ${validContracts.length}`);
    return { contracts: validContracts };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤:', error);
    return { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.' };
  }
}

// –§—É–Ω–∫—Ü–∏—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å—á–µ—Ç–∞ —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º
async function linkInvoiceToContract(api, invoiceId, contractId, contractTitle) {
  try {
    console.log(`üîó –°–≤—è–∑—ã–≤–∞–µ–º —Å—á–µ—Ç #${invoiceId} —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º #${contractId}`);
    
    await api.cards.update(invoiceId, {
      parent_id: contractId
    });

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≤—è–∑–∞–Ω—ã –∫–∞—Ä—Ç–æ—á–∫–∏`);
    return { success: `–°—á–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥–æ–≥–æ–≤–æ—Ä—É "${contractTitle}" (#${contractId})` };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è:', error);
    return { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å—á–µ—Ç –∫ –¥–æ–≥–æ–≤–æ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é.' };
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async function showContractSelectionDialog(buttonContext, invoice, contracts, innValue) {
  if (contracts.length === 0) {
    buttonContext.showSnackbar(
      `‚ùå –î–æ–≥–æ–≤–æ—Ä—ã —Å –ò–ù–ù ${innValue} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ò–ù–ù.`,
      'warning'
    );
    return null;
  }

  if (contracts.length === 1) {
    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –¥–æ–≥–æ–≤–æ—Ä - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≤—è–∑—ã–≤–∞–µ–º
    return contracts[0];
  }

  // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
  const contractChoices = contracts.map(contract => ({
    id: contract.id,
    label: `#${contract.id} - ${contract.title}`
  }));

  try {
    const selectedChoice = await buttonContext.showChoice({
      title: `–ù–∞–π–¥–µ–Ω–æ ${contracts.length} –¥–æ–≥–æ–≤–æ—Ä–æ–≤ —Å –ò–ù–ù ${innValue}`,
      message: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–≥–æ–≤–æ—Ä –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —ç—Ç–æ–º—É —Å—á–µ—Ç—É:',
      choices: contractChoices
    });

    if (selectedChoice) {
      return contracts.find(c => c.id === selectedChoice.id);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞:', error);
    buttonContext.showSnackbar('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–æ–≥–æ–≤–æ—Ä–∞', 'error');
  }

  return null;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∏—Å–∫–∞ –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
async function processInvoiceINN(buttonContext, api, card, innValue) {
  console.log('üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—á–µ—Ç–∞ —Å –ò–ù–ù:', innValue);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  buttonContext.showSnackbar('üîç –ü–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤...', 'info');
  
  // –ò—â–µ–º –¥–æ–≥–æ–≤–æ—Ä—ã
  const searchResult = await findContractsByINN(api, card, innValue);
  
  if (searchResult.error) {
    buttonContext.showSnackbar(searchResult.error, 'warning');
    return;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  const selectedContract = await showContractSelectionDialog(
    buttonContext, 
    card, 
    searchResult.contracts, 
    innValue
  );

  if (selectedContract) {
    // –°–≤—è–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä
    const linkResult = await linkInvoiceToContract(
      api,
      card.id, 
      selectedContract.id, 
      selectedContract.title
    );

    if (linkResult.success) {
      buttonContext.showSnackbar(linkResult.success, 'success');
    } else {
      buttonContext.showSnackbar(linkResult.error, 'error');
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–¥–æ–Ω–∞
Addon.initialize({
  'card_buttons': async (cardButtonsContext) => {
    console.log('üîò –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∞–¥–¥–æ–Ω–∞');
    
    const buttons = [];

    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º
    buttons.push({
      text: 'üîó –ù–∞–π—Ç–∏ –¥–æ–≥–æ–≤–æ—Ä –ø–æ –ò–ù–ù',
      callback: async (buttonContext) => {
        try {
          console.log('üîò –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–∞');
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–∏
          const currentCard = await buttonContext.getCard();
          console.log('üìã –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', currentCard);
          
          // –ü–æ–ª—É—á–∞–µ–º API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
          const api = await buttonContext.getApi();
          console.log('üîå API –ø–æ–ª—É—á–µ–Ω');
          
          // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ò–ù–ù
          const innKey = `id_${INN_FIELD_ID}`;
          let innValue = null;
          
          if (currentCard.properties && currentCard.properties[innKey]) {
            innValue = currentCard.properties[innKey].toString().trim();
          }
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ò–ù–ù
          if (!innValue) {
            buttonContext.showSnackbar(
              '‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ –ò–ù–ù –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º –¥–æ–≥–æ–≤–æ—Ä–∞', 
              'warning'
            );
            return;
          }

          console.log('üîç –ò–ù–ù –¥–ª—è –ø–æ–∏—Å–∫–∞:', innValue);
          
          // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ –∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
          await processInvoiceINN(buttonContext, api, currentCard, innValue);

        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞:', error);
          buttonContext.showSnackbar(
            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞', 
            'error'
          );
        }
      }
    });

    console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ –∞–¥–¥–æ–Ω–∞ –≥–æ—Ç–æ–≤—ã');
    return buttons;
  }
});

console.log('‚úÖ –ê–¥–¥–æ–Ω —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å—á–µ—Ç–æ–≤ —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
