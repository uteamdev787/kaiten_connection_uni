const iframe = Addon.iframe();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç main.js
const spaceMap = {
  517319: 517325, // –°—á–µ—Ç–∞ -> –î–æ–≥–æ–≤–æ—Ä—ã
  517314: 532009, // –°—á–µ—Ç–∞ -> –î–æ–≥–æ–≤–æ—Ä—ã  
  517324: 532011  // –°—á–µ—Ç–∞ -> –î–æ–≥–æ–≤–æ—Ä—ã
};
const innFieldId = 415447;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const innBadge = document.getElementById('innBadge');
const loadingState = document.getElementById('loadingState');
const resultsState = document.getElementById('resultsState');
const noResultsState = document.getElementById('noResultsState');
const contractsList = document.getElementById('contractsList');
const linkBtn = document.getElementById('linkBtn');
const cancelBtn = document.getElementById('cancelBtn');
const searchInterface = document.getElementById('searchInterface');

// –°–æ—Å—Ç–æ—è–Ω–∏–µ
let currentCard = null;
let innValue = null;
let foundContracts = [];
let selectedContractId = null;

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤
function displayContracts(contracts) {
  contractsList.innerHTML = '';
  
  contracts.forEach(contract => {
    const contractCard = document.createElement('div');
    contractCard.className = 'contract-card';
    contractCard.dataset.contractId = contract.id;
    
    // –û–±—Ä–µ–∑–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
    const description = contract.description ? 
      (contract.description.length > 150 ? 
        contract.description.substring(0, 150) + '...' : 
        contract.description) : 
      '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
    
    contractCard.innerHTML = `
      <div class="contract-header">
        <div class="contract-title">${contract.title}</div>
        <div class="contract-id">#${contract.id}</div>
      </div>
      <div class="contract-description">${description}</div>
      <div class="contract-meta">
        <span>üìÅ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ: ${contract.space_id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
        <span>üìÖ –û–±–Ω–æ–≤–ª–µ–Ω: ${contract.updated ? new Date(contract.updated).toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
      </div>
    `;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞
    contractCard.addEventListener('click', () => {
      // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
      document.querySelectorAll('.contract-card').forEach(card => {
        card.classList.remove('selected');
      });
      
      // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
      contractCard.classList.add('selected');
      selectedContractId = contract.id;
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
      linkBtn.disabled = false;
      linkBtn.textContent = `üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫ –¥–æ–≥–æ–≤–æ—Ä—É #${contract.id}`;
    });
    
    contractsList.appendChild(contractCard);
  });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
async function searchContracts() {
  try {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞
    const currentSpaceId = currentCard.space?.id || currentCard.space_id;
    const contractsSpaceId = spaceMap[currentSpaceId];
    
    console.log('üîç –ü–æ–∏—Å–∫ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ:', contractsSpaceId);
    
    if (!contractsSpaceId) {
      throw new Error(`–ü–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ ${currentSpaceId} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ iframe API
    const contracts = await iframe.requestWithContext({
      method: 'GET',
      url: '/cards',
      params: {
        space_id: contractsSpaceId,
        [`custom_fields[${innFieldId}]`]: innValue
      }
    });

    foundContracts = contracts.filter(contract => contract.id !== currentCard.id);
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: ${foundContracts.length}`);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    loadingState.style.display = 'none';
    
    if (foundContracts.length === 0) {
      noResultsState.style.display = 'block';
    } else {
      resultsState.style.display = 'block';
      displayContracts(foundContracts);
    }
    
    // –ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
    iframe.fitSize(searchInterface);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
    
    loadingState.style.display = 'none';
    noResultsState.style.display = 'block';
    
    // –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    noResultsState.innerHTML = `
      <div class="no-results-icon">‚ö†Ô∏è</div>
      <div style="font-weight: 600; margin-bottom: 8px; color: var(--addon-error-color);">
        –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞
      </div>
      <div style="line-height: 1.5;">
        ${error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤'}
      </div>
      <div style="margin-top: 16px; font-size: 12px;">
        –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
      </div>
    `;
  }
}

// –§—É–Ω–∫—Ü–∏—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å—á–µ—Ç–∞ —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º
async function linkToContract() {
  if (!selectedContractId) {
    iframe.showSnackbar('–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–≥–æ–≤–æ—Ä –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏', 'warning');
    return;
  }

  try {
    linkBtn.disabled = true;
    linkBtn.textContent = '‚è≥ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º...';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é —Å–≤—è–∑—å
    await iframe.requestWithContext({
      method: 'PUT',
      url: `/cards/${currentCard.id}`,
      data: {
        parent_id: selectedContractId
      }
    });
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
    const selectedContract = foundContracts.find(c => c.id === selectedContractId);
    const contractTitle = selectedContract ? selectedContract.title : `#${selectedContractId}`;
    
    iframe.showSnackbar(`‚úÖ –°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥–æ–≥–æ–≤–æ—Ä—É "${contractTitle}"!`, 'success');
    iframe.closePopup();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è:', error);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É
    let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å—á–µ—Ç –∫ –¥–æ–≥–æ–≤–æ—Ä—É';
    if (error.response && error.response.status === 403) {
      errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏';
    } else if (error.response && error.response.status === 404) {
      errorMessage = '–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
    }
    
    iframe.showSnackbar(errorMessage, 'error');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
    linkBtn.disabled = false;
    linkBtn.textContent = 'üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É';
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
cancelBtn.addEventListener('click', () => {
  iframe.closePopup();
});

linkBtn.addEventListener('click', linkToContract);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ popup
iframe.render(async () => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ popup
    currentCard = await iframe.getCard();
    
    if (!currentCard) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏');
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ò–ù–ù –∏–∑ —Å–≤–æ–π—Å—Ç–≤ –∫–∞—Ä—Ç–æ—á–∫–∏
    const innKey = `id_${innFieldId}`;
    innValue = currentCard.properties && currentCard.properties[innKey];
    
    if (!innValue || innValue.trim().length === 0) {
      throw new Error('–ü–æ–ª–µ –ò–ù–ù –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ');
    }

    innValue = innValue.trim();
    console.log('üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞:', currentCard.id);
    console.log('üéØ –ò–ù–ù –¥–ª—è –ø–æ–∏—Å–∫–∞:', innValue);
    console.log('üìã –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏:', JSON.stringify(currentCard, null, 2));
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ò–ù–ù
    innBadge.textContent = `–ò–ù–ù: ${innValue}`;
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
    let currentSpaceId = currentCard.space?.id || currentCard.space_id;
    
    // –ï—Å–ª–∏ –ø—Ä—è–º–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—ã—Ç–∞–µ–º—Å—è —á–µ—Ä–µ–∑ board
    if (!currentSpaceId && currentCard.board) {
      currentSpaceId = currentCard.board.space?.id || currentCard.board.space_id;
      console.log('üìç –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ board:', currentSpaceId);
    }
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞–ø–ø–∏–Ω–≥ board_id -> space_id –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤
    if (!currentSpaceId && currentCard.board_id) {
      const boardToSpaceMap = {
        1183281: 517319, // –ü—Ä–∏–º–µ—Ä: board_id -> space_id (–Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ)
        // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏ –∑–¥–µ—Å—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      };
      currentSpaceId = boardToSpaceMap[currentCard.board_id];
      console.log('üìç –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ board_id:', currentSpaceId);
    }
    
    console.log('üè¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:', currentSpaceId);
    console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏ –∫–∞—Ä—Ç–æ—á–∫–∏:', Object.keys(currentCard));
    
    const contractsSpaceId = spaceMap[currentSpaceId];
    
    if (!contractsSpaceId) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      const availableSpaces = Object.keys(spaceMap).join(', ');
      const debugInfo = `
–¢–µ–∫—É—â–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ: ${currentSpaceId || '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–û'}
–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞: ${availableSpaces}
Board ID: ${currentCard.board_id || '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù'}
      `.trim();
      
      throw new Error(`–ü–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ ${currentSpaceId || '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–û'} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.\n\n${debugInfo}`);
    }
    
    console.log(`üéØ –ü–æ–∏—Å–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ ${currentSpaceId} -> ${contractsSpaceId}`);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
    await searchContracts();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    
    loadingState.style.display = 'none';
    noResultsState.style.display = 'block';
    noResultsState.innerHTML = `
      <div class="no-results-icon">‚ö†Ô∏è</div>
      <div style="font-weight: 600; margin-bottom: 8px; color: var(--addon-error-color);">
        –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      </div>
      <div style="line-height: 1.5;">
        ${error.message}
      </div>
    `;
  }
});