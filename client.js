Addon.initialize({
  'card_buttons': async (cardButtonsContext) => {
    const buttons = [];

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const spaceMap = {
      517319: 517325,
      517314: 532009, 
      517324: 532011
    };
    const innFieldId = 415447;

    buttons.push({
      text: 'üîó –°–≤—è–∑–∞—Ç—å –ø–æ –ò–ù–ù',
      callback: async (buttonContext) => {
        try {
          // 1. –ü–æ–ª—É—á–∞–µ–º API –æ–±—ä–µ–∫—Ç
          const api = buttonContext.api || buttonContext;
          
          // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É
          const currentCard = await api.cards.get(buttonContext.card_id);
          if (!currentCard) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–∏');
          }
          
          // 3. –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ò–ù–ù –∏–∑ —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–∏
          const innField = currentCard.custom_fields.find(field => field.id === innFieldId);
          if (!innField || !innField.value) {
            buttonContext.showNotification({
              type: 'warning',
              message: '–ü–æ–ª–µ –ò–ù–ù –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤ —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ.'
            });
            return;
          }
          
          const innValue = innField.value;
          const currentSpaceId = currentCard.space.id;
          
          // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –ª–∏ —Ç–µ–∫—É—â–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
          const searchSpaceId = spaceMap[currentSpaceId];
          if (!searchSpaceId) {
            buttonContext.showNotification({
              type: 'info', 
              message: `–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ ${currentSpaceId} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫.`
            });
            return;
          }
          
          // 5. –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ç–∞–∫–∏–º –∂–µ –ò–ù–ù –≤ —Ü–µ–ª–µ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
          buttonContext.showNotification({
            type: 'info',
            message: `–ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –ò–ù–ù ${innValue} –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ ${searchSpaceId}...`
          });
          
          const foundCards = await api.cards.find({
            space_id: searchSpaceId,
            custom_fields: [{
              field_id: innFieldId,
              value: innValue
            }]
          });
          
          // 6. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          if (!foundCards || foundCards.length === 0) {
            buttonContext.showNotification({
              type: 'info',
              message: `–ö–∞—Ä—Ç–æ—á–∫–∏ —Å –ò–ù–ù ${innValue} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ ${searchSpaceId}.`
            });
            return;
          }
          
          // 7. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ - —Å—Ä–∞–∑—É —Å–≤—è–∑—ã–≤–∞–µ–º
          if (foundCards.length === 1) {
            const parentCard = foundCards[0];
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ –º—ã —Å–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å–∞–º—É —Å —Å–æ–±–æ–π
            if (parentCard.id === currentCard.id) {
              buttonContext.showNotification({
                type: 'warning',
                message: '–ù–µ–ª—å–∑—è —Å–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å–∞–º—É —Å —Å–æ–±–æ–π.'
              });
              return;
            }
            
            await api.cards.update(currentCard.id, {
              parent_id: parentCard.id
            });
            
            buttonContext.showNotification({
              type: 'success',
              message: `–ö–∞—Ä—Ç–æ—á–∫–∞ #${parentCard.id} "${parentCard.title}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è.`
            });
            return;
          }
          
          // 8. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–æ—á–µ–∫ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
          const choices = foundCards
            .filter(card => card.id !== currentCard.id) // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            .map(card => ({
              id: card.id,
              label: `#${card.id} - ${card.title}`
            }));
          
          if (choices.length === 0) {
            buttonContext.showNotification({
              type: 'info',
              message: '–ù–∞–π–¥–µ–Ω–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞. –î—Ä—É–≥–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –Ω–µ—Ç.'
            });
            return;
          }
          
          // 9. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤—ã–±–æ—Ä–æ–º
          const selectedChoice = await buttonContext.showChoice({
            title: `–ù–∞–π–¥–µ–Ω–æ ${foundCards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –ò–ù–ù ${innValue}`,
            message: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π:',
            choices: choices
          });
          
          // 10. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–∞—Ä—Ç–æ—á–∫—É - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å
          if (selectedChoice) {
            await api.cards.update(currentCard.id, {
              parent_id: selectedChoice.id
            });
            
            const parentCard = foundCards.find(card => card.id === selectedChoice.id);
            buttonContext.showNotification({
              type: 'success',
              message: `–ö–∞—Ä—Ç–æ—á–∫–∞ #${parentCard.id} "${parentCard.title}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è.`
            });
          }
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –≤ –∞–¥–¥–æ–Ω–µ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø–æ –ò–ù–ù:', error);
          buttonContext.showNotification({
            type: 'error',
            message: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`
          });
        }
      }
    });

    return buttons;
  }
});
